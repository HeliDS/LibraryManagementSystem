/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_forms;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import my_classes.DB;
import my_classes.Func_Class;
import my_classes.Member;
import java.text.SimpleDateFormat;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author Helili
 */
public class ReturnBookForm extends javax.swing.JFrame {
 my_classes.Book book  = new my_classes.Book();
 my_classes.Func_Class func = new my_classes.Func_Class();
 my_classes.Member member = new my_classes.Member();  
 my_classes.Issue_Book issue = new my_classes.Issue_Book();
 
 //these variables will help to check if the book and member exist
 boolean book_Exist= false;
 boolean member_Exist= false;

    
 
    /**
     * Creates new form MembersListForm
     */
    public ReturnBookForm() {
        initComponents();
        
        
        //to center the form
    this.setLocationRelativeTo(null);
    
    
    //to display image in the top
       my_classes.Func_Class Func = new my_classes.Func_Class();
       Func.displayImage(70, 90, "/my_images/organizer.png", jLabel_FormTitle);//to display image in the top
       
      //to populate jcombobox with genres
      //fillJcomboboxWithGenres();
      
      
       /*//to hide the jlabel "empty name message"
       jLabel_EmptyISBN.setVisible(false);
       jLabel_EmptyGenre.setVisible(false);
       jLabel_EmptyQuantity.setVisible(false);
       jLabel_EmptyPrice.setVisible(false);
       jLabel_EmptyDateofRecieved.setVisible(false);*/
       
       //add a white border in the bottom of the book name and member full name jlabels
       setBorderToJlable(jLabel_BookName,Color.white);
       setBorderToJlable(jLabel_MemberFullname,Color.white);
       
       //customize the jtable
       func.customTable(jTable_IssuedBooks);
       
       //customize the jtable header row
       func.customTableHeader(jTable_IssuedBooks, new Color(34,167, 240), 16);
       
       //populate jtable from issuedbooks table
       populateJtableWithIssuedBooks("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel_FormTitle = new javax.swing.JLabel();
        jLabel_CloseForm_ = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton_Lost = new javax.swing.JButton();
        jButton_ReturnBook = new javax.swing.JButton();
        jDateChooser_IssueDate = new com.toedter.calendar.JDateChooser();
        jLabel_BookName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_MemberFullname = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser_ReturnDate = new com.toedter.calendar.JDateChooser();
        jSpinner_BookID = new javax.swing.JSpinner();
        jSpinner_MemberID = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Note = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_IssuedBooks = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Status = new javax.swing.JComboBox<>();
        jButton_Delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel_FormTitle.setBackground(new java.awt.Color(0, 102, 51));
        jLabel_FormTitle.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel_FormTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_FormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_FormTitle.setText("Return Book");
        jLabel_FormTitle.setOpaque(true);

        jLabel_CloseForm_.setBackground(new java.awt.Color(0, 102, 51));
        jLabel_CloseForm_.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_CloseForm_.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CloseForm_.setText("    X");
        jLabel_CloseForm_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_CloseForm_.setOpaque(true);
        jLabel_CloseForm_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_CloseForm_MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setText("Issue Date:");

        jButton_Lost.setBackground(new java.awt.Color(153, 153, 255));
        jButton_Lost.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_Lost.setText("Lost");
        jButton_Lost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LostActionPerformed(evt);
            }
        });

        jButton_ReturnBook.setBackground(new java.awt.Color(0, 153, 153));
        jButton_ReturnBook.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_ReturnBook.setText("Return Book");
        jButton_ReturnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ReturnBookActionPerformed(evt);
            }
        });

        jLabel_BookName.setForeground(new java.awt.Color(51, 0, 153));
        jLabel_BookName.setText("*Book name");
        jLabel_BookName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_BookName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Member ID:");

        jLabel_MemberFullname.setForeground(new java.awt.Color(51, 0, 153));
        jLabel_MemberFullname.setText("*Member full name");
        jLabel_MemberFullname.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_MemberFullname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseExited(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setText(" Select Book  Status:");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setText("Note:");

        jSpinner_BookID.setEnabled(false);

        jSpinner_MemberID.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel9.setText("Return Date:");

        jTextArea_Note.setColumns(20);
        jTextArea_Note.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Note);

        jTable_IssuedBooks.setBackground(new java.awt.Color(255, 204, 51));
        jTable_IssuedBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_IssuedBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_IssuedBooksMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_IssuedBooks);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setText(" Book ID:");

        jComboBox_Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Issued", "Returned", "Lost" }));
        jComboBox_Status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_StatusActionPerformed(evt);
            }
        });

        jButton_Delete.setBackground(new java.awt.Color(153, 153, 153));
        jButton_Delete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_Delete.setText("Delete");
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jSpinner_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_MemberFullname)
                            .addComponent(jSpinner_MemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_BookName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_Status, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooser_ReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooser_IssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton_ReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_Lost, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(155, 155, 155))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(903, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jSpinner_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_BookName)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_MemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_MemberFullname)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser_IssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser_ReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_ReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Lost, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(116, 116, 116)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(517, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jLabel_CloseForm_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_CloseForm_MouseClicked
        // TO close the form
        this.dispose();
    }//GEN-LAST:event_jLabel_CloseForm_MouseClicked

  
    private void jButton_LostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LostActionPerformed
     //we need to the book status to lost  
     //And update the book quantity
     //the new quantity = the quantity - 1
     //even if the book is lost, we will not change the return date
    
        int _book_id = (int)jSpinner_BookID.getValue(); 
        int _member_id = (int)jSpinner_MemberID.getValue();
        String _note =jTextArea_Note.getText(); 
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        
        try
        {
            String _issue_date = dateFormat.format(jDateChooser_IssueDate.getDate());
            String _return_date = dateFormat.format(jDateChooser_ReturnDate.getDate());
            
            //before issuing book, need to check if the return date came before the issued date
            java.util.Date issDate =  dateFormat.parse(_issue_date);
            java.util.Date rtnDate =  dateFormat.parse(_return_date);
            
            if(rtnDate.before(issDate))
            {
                JOptionPane.showMessageDialog(null, "The Return Date must be after the Issue Date","Wrong Return Date",2);

            }
            else
            {
                
                issue.updateIssue(_book_id, _member_id, "lost", _issue_date, _return_date, _note);
                
                //need to update the book quantity
                int quantity = new my_classes.Book().getBookById(_book_id).getQuantity();//get the book quantity
                book.setQuantity_Minus_One(_book_id, quantity -1);//update the book quantity
                
                
                
                
                //reset fields
                jSpinner_BookID.setValue(0);
                jSpinner_MemberID.setValue(0);
                jLabel_BookName.setText("Book Name");
                jLabel_MemberFullname.setText("Member Full Name");
                jDateChooser_IssueDate.setDate(null);
               //Date date =  new Date();
                //System.out.println("New date is " +);
                jDateChooser_ReturnDate.setDate(null);
                jTextArea_Note.setText("");
            }
      
        }
       
        catch (HeadlessException | NullPointerException | ParseException ex)
        {
 
            JOptionPane.showMessageDialog(null, "Select an Item from the Table","Select Item",2);
             
        } catch (SQLException ex) {   
         Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
     }   

    }//GEN-LAST:event_jButton_LostActionPerformed

    private void jButton_ReturnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ReturnBookActionPerformed
        // to return a book
        
        int _book_id = (int)jSpinner_BookID.getValue(); 
        int _member_id = (int)jSpinner_MemberID.getValue();
        String _note =jTextArea_Note.getText(); 
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        
        try
        {
            String _issue_date = dateFormat.format(jDateChooser_IssueDate.getDate());
            String _return_date = dateFormat.format(jDateChooser_ReturnDate.getDate());
            
            //before issuing book, need to check if the return date came before the issued date
            java.util.Date issDate =  dateFormat.parse(_issue_date);
            java.util.Date rtnDate =  dateFormat.parse(_return_date);
            
            //Need to check if the book and member exists
            /*if(!book_Exist)
            {
                JOptionPane.showMessageDialog(null, "You need to check if this Book exist first by clicking the Search Book button","Check if the Book exist",2);

            }
            else if(!member_Exist)
            {
                JOptionPane.showMessageDialog(null, "You need to check if this Member exist first by clicking the Search Member button","Check if the Mmember exist",2);

            }
            
            //need to check if this book is available
            else if(!issue.checkBookAvailability(_book_id))
            {
                JOptionPane.showMessageDialog(null, "This Book is not available right now","Book not available",2);

            }*/
            
            if(rtnDate.before(issDate))
            {
                JOptionPane.showMessageDialog(null, "The Return Date must be after the Issue Date","Wrong Return Date",2);

            }
            else
            {
                
                issue.updateIssue(_book_id, _member_id, "returned", _issue_date, _return_date, _note);
                
                //reset fields
                
                jSpinner_BookID.setValue(0);
                jSpinner_MemberID.setValue(0);
                jLabel_BookName.setText("Book Name");
                jLabel_MemberFullname.setText("Member Full Name");
                jDateChooser_IssueDate.setDate(null);
               //Date date =  new Date();
                //System.out.println("New date is " +);
                jDateChooser_ReturnDate.setDate(null);
                jTextArea_Note.setText("");
            }
      
        }
       
        catch (HeadlessException | NullPointerException | ParseException ex)
        {
 
            JOptionPane.showMessageDialog(null, "Select an Item from the Table","Select Item",2);
             
        }
        
    }//GEN-LAST:event_jButton_ReturnBookActionPerformed
    
    private void jLabel_BookNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseClicked
        // to display the book info card
         int book_id = (int)jSpinner_BookID.getValue();
         BookInfoCardForm bookCardF = new BookInfoCardForm(book_id);
         bookCardF.setVisible(true);
    }//GEN-LAST:event_jLabel_BookNameMouseClicked

    private void jLabel_MemberFullnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseClicked
        // to display the member info card
       
         int member_id = (int)jSpinner_MemberID.getValue();
         MemberInfoCardForm memberCardF = new MemberInfoCardForm(member_id);
         memberCardF.setVisible(true);
        
    }//GEN-LAST:event_jLabel_MemberFullnameMouseClicked

    private void jLabel_BookNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseEntered
        // add border in the bottom of the book name jlabel
       
        setBorderToJlable(jLabel_BookName, new Color(51,102,255));

    }//GEN-LAST:event_jLabel_BookNameMouseEntered

    private void jLabel_BookNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseExited
         // add white border in the bottom of the book name jlabel
        
        setBorderToJlable(jLabel_BookName, Color.white);
    }//GEN-LAST:event_jLabel_BookNameMouseExited

    private void jLabel_MemberFullnameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseEntered
        // add border in the bottom of the member full name jlabel
       
        setBorderToJlable(jLabel_MemberFullname, new Color(51,102,255));

    }//GEN-LAST:event_jLabel_MemberFullnameMouseEntered

    private void jLabel_MemberFullnameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseExited
        // add white border in the bottom of the member full name jlabel
        
        setBorderToJlable(jLabel_MemberFullname, Color.white);
    }//GEN-LAST:event_jLabel_MemberFullnameMouseExited

    private void jTable_IssuedBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_IssuedBooksMouseClicked
        // TO display the selected row data

        //To get the selected row index
        int index = jTable_IssuedBooks.getSelectedRow();

        //to get values
        int book_id = Integer.parseInt(jTable_IssuedBooks.getValueAt(index, 0).toString());
        int member_id = Integer.parseInt(jTable_IssuedBooks.getValueAt(index, 1).toString());
        

        my_classes.Book selectedBook;
        my_classes.Member selectedMember;

            try {
                selectedBook = book.getBookById(book_id);
                //display the book name and id
                jSpinner_BookID.setValue(selectedBook.getId());
                jLabel_BookName.setText(selectedBook.getName());
                
                selectedMember = member.getMemberById(member_id);

                //display the member fullname and id
                jSpinner_MemberID.setValue(selectedMember.getId());
                jLabel_MemberFullname.setText(selectedMember.getFirstName() + " " + selectedMember.getLastName());
                    
                    String issued_date = jTable_IssuedBooks.getValueAt(index, 3).toString();
                    String return_date = jTable_IssuedBooks.getValueAt(index, 4).toString();
                    //String status = jTable_IssuedBooks.getValueAt(index, 4).toString();
                    String note = jTable_IssuedBooks.getValueAt(index, 5).toString();
                    
                //display the dates
                
                java.util.Date issDate =  new SimpleDateFormat("yyyy-MM-dd").parse(issued_date);
               
                jDateChooser_IssueDate.setDate(issDate);
                
                
                java.util.Date rtnDate =  new SimpleDateFormat("yyyy-MM-dd").parse(return_date);
                jDateChooser_ReturnDate.setDate(rtnDate);
                
                jTextArea_Note.setText(note);
                
            } catch (SQLException ex) {
                Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
         Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        
       

       

    }//GEN-LAST:event_jTable_IssuedBooksMouseClicked

    private void jComboBox_StatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_StatusActionPerformed
        // display data on the jtable depending on the jcombobox selected value
        String status =jComboBox_Status.getSelectedItem().toString();
        if(status.equals("All"))
        {
            status ="";
        }
        populateJtableWithIssuedBooks(status);
    }//GEN-LAST:event_jComboBox_StatusActionPerformed

    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed
        // delete the selected issue from the database
        
        
        
        int index = jTable_IssuedBooks.getSelectedRow();

        try
        {
                //to get values
           int _book_id = Integer.parseInt(jTable_IssuedBooks.getValueAt(index, 0).toString());
           int _member_id = Integer.parseInt(jTable_IssuedBooks.getValueAt(index, 1).toString());
           String _issued_date = jTable_IssuedBooks.getValueAt(index, 3).toString();

           issue.removeFromIssuedTable(_book_id, _member_id, _issued_date);
           
           //clear fields
           jSpinner_BookID.setValue(0);
           jSpinner_MemberID.setValue(0);
           jLabel_BookName.setText("Book Name");
           jLabel_MemberFullname.setText("Member Full-Name");
           jDateChooser_IssueDate.setDate(null);
           jDateChooser_ReturnDate.setDate(null);
           jTextArea_Note.setText("");

        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,"Select the element you want to Delete from the Table" + ex.getMessage(),"Delete Error",2);
        }
        
       
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    //to create a little function to set border
    public void setBorderToJlable(JLabel label, Color color)
    {
        Border border = BorderFactory.createMatteBorder(0, 0, 1, 0, color);
        label.setBorder(border);
    
    }
   
   //to create a function to populate the jtable with issued books
    public void populateJtableWithIssuedBooks(String _status)
    {
        
        ArrayList<my_classes.Issue_Book> issBooksList = issue.issuedbooksList(_status);
        
        //jtable columns
        String[] colNames = {"Book", "Member", "Status", "Issued Date", "Return Date", "Note"} ; 
        
        //rows
        Object[][] rows = new Object[issBooksList.size()][colNames.length];
        
        
        for(int i = 0; i < issBooksList.size(); i++)
        {
            rows [i] [0] = issBooksList.get (i) .getBook_id();
            rows [i] [1] = issBooksList.get (i) .getMember_id();
            rows [i] [2] = issBooksList.get (i) .getStatus();
            rows [i] [3] = issBooksList.get (i) .getIssue_date();
            rows [i] [4] = issBooksList.get (i) .getReturn_date();
            rows [i] [5] = issBooksList.get (i) .getNote();

        }    
        
        DefaultTableModel model = new DefaultTableModel (rows, colNames);
        jTable_IssuedBooks.setModel(model);
        
    } 
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Lost;
    private javax.swing.JButton jButton_ReturnBook;
    private javax.swing.JComboBox<String> jComboBox_Status;
    private com.toedter.calendar.JDateChooser jDateChooser_IssueDate;
    private com.toedter.calendar.JDateChooser jDateChooser_ReturnDate;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_BookName;
    private javax.swing.JLabel jLabel_CloseForm_;
    private javax.swing.JLabel jLabel_FormTitle;
    private javax.swing.JLabel jLabel_MemberFullname;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner_BookID;
    private javax.swing.JSpinner jSpinner_MemberID;
    private javax.swing.JTable jTable_IssuedBooks;
    private javax.swing.JTextArea jTextArea_Note;
    // End of variables declaration//GEN-END:variables

//    private static class func {
//
//        private static String selectImage() {
////            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//            
//                ImageIcon imgIco = new ImageIcon(getClass().getResource(imagePath)); //to get the image
//
//            Image image = imgIco.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH); //to make the image fit the jLabel
//
//            label.setIcon(new ImageIcon(image)); //to set the image into the jLabel
//        }
//
//        private static void displayImage(int i, int i0, Object object, String path, JLabel jLabel_Image) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        }
//
//        public func() {
//        }
//    }
}
