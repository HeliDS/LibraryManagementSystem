/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_forms;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import my_classes.DB;
import my_classes.Func_Class;
import my_classes.Member;
import java.text.SimpleDateFormat;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author Helili
 */
public class IssueBookForm extends javax.swing.JFrame {
 my_classes.Book book  = new my_classes.Book();
 my_classes.Func_Class func = new my_classes.Func_Class();
 my_classes.Member member = new my_classes.Member();  
 my_classes.Issue_Book issue = new my_classes.Issue_Book();
 
 //these variables will help to check if the book and member exist
 boolean book_Exist= false;
 boolean member_Exist= false;

    
 
    /**
     * Creates new form MembersListForm
     */
    public IssueBookForm() {
        initComponents();
        
        
        //to center the form
    this.setLocationRelativeTo(null);
    
    
    //to display image in the top
       my_classes.Func_Class Func = new my_classes.Func_Class();
       Func.displayImage(70, 90, "/my_images/organizer.png", jLabel_FormTitle);//to display image in the top
       
      //to populate jcombobox with genres
      //fillJcomboboxWithGenres();
      
      
       /*//to hide the jlabel "empty name message"
       jLabel_EmptyISBN.setVisible(false);
       jLabel_EmptyGenre.setVisible(false);
       jLabel_EmptyQuantity.setVisible(false);
       jLabel_EmptyPrice.setVisible(false);
       jLabel_EmptyDateofRecieved.setVisible(false);*/
       
       //add a white border in the bottom of the book name and member full name jlabels
       setBorderToJlable(jLabel_BookName,Color.white);
       setBorderToJlable(jLabel_MemberFullname,Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel_FormTitle = new javax.swing.JLabel();
        jLabel_CloseForm_ = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton_Cancel = new javax.swing.JButton();
        jButton_IssueBook = new javax.swing.JButton();
        jDateChooser_IssueDate = new com.toedter.calendar.JDateChooser();
        jButton_searchBook = new javax.swing.JButton();
        jLabel_BookName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_MemberFullname = new javax.swing.JLabel();
        jButton_searchMember = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel_available = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser_ReturnDate = new com.toedter.calendar.JDateChooser();
        jSpinner_BookID = new javax.swing.JSpinner();
        jSpinner_MemberID = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Note = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel_FormTitle.setBackground(new java.awt.Color(0, 102, 51));
        jLabel_FormTitle.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel_FormTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_FormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_FormTitle.setText("  Issue Book");
        jLabel_FormTitle.setOpaque(true);

        jLabel_CloseForm_.setBackground(new java.awt.Color(0, 102, 51));
        jLabel_CloseForm_.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_CloseForm_.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CloseForm_.setText("    X");
        jLabel_CloseForm_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_CloseForm_.setOpaque(true);
        jLabel_CloseForm_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_CloseForm_MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Is this book available:");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setText("Issue Date:");

        jButton_Cancel.setBackground(new java.awt.Color(153, 153, 0));
        jButton_Cancel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_Cancel.setText("Cancel");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton_IssueBook.setBackground(new java.awt.Color(153, 153, 0));
        jButton_IssueBook.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton_IssueBook.setText("Issue Book");
        jButton_IssueBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IssueBookActionPerformed(evt);
            }
        });

        jButton_searchBook.setText("Search Book");
        jButton_searchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchBookActionPerformed(evt);
            }
        });

        jLabel_BookName.setForeground(new java.awt.Color(51, 0, 153));
        jLabel_BookName.setText("*Book name");
        jLabel_BookName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_BookName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_BookNameMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Enter Member ID:");

        jLabel_MemberFullname.setForeground(new java.awt.Color(51, 0, 153));
        jLabel_MemberFullname.setText("*Member full name");
        jLabel_MemberFullname.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_MemberFullname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_MemberFullnameMouseExited(evt);
            }
        });

        jButton_searchMember.setText("Search Member");
        jButton_searchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchMemberActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setText("Enter Book ID:");

        jLabel_available.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_available.setForeground(new java.awt.Color(51, 0, 102));
        jLabel_available.setText("Yes or No");
        jLabel_available.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_availableMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setText("Note:");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel9.setText("Return Date:");

        jTextArea_Note.setColumns(20);
        jTextArea_Note.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Note);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_BookName)
                            .addComponent(jLabel_MemberFullname)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jSpinner_MemberID)
                                .addGap(84, 84, 84)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton_searchMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_searchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(185, 185, 185))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser_ReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser_IssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(358, 358, 358))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_available)
                                .addGap(267, 267, 267))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jButton_IssueBook, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_searchBook)
                    .addComponent(jSpinner_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_BookName)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_searchMember)
                    .addComponent(jSpinner_MemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_MemberFullname)
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_available))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser_IssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser_ReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_IssueBook, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jLabel_CloseForm_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_CloseForm_MouseClicked
        // TO close the form
        this.dispose();
    }//GEN-LAST:event_jLabel_CloseForm_MouseClicked

    String path=null;
    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        // to close the window
        this.dispose();
        

    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jButton_IssueBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IssueBookActionPerformed
        // to issue a book
        
        int _book_id = (int)jSpinner_BookID.getValue(); 
        int _member_id = (int)jSpinner_MemberID.getValue();
        String _note =jTextArea_Note.getText(); 
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        
        try
        {
            String _issue_date = dateFormat.format(jDateChooser_IssueDate.getDate());
            String _return_date = dateFormat.format(jDateChooser_ReturnDate.getDate());
            
            //before issuing book, need to check if the return date came before the issued date
            java.util.Date issDate =  dateFormat.parse(_issue_date);
            java.util.Date rtnDate =  dateFormat.parse(_return_date);
            
            //Need to check if the book and member exists
            if(!book_Exist)
            {
                JOptionPane.showMessageDialog(null, "You need to check if this Book exist first by clicking the Search Book button","Check if the Book exist",2);

            }
            else if(!member_Exist)
            {
                JOptionPane.showMessageDialog(null, "You need to check if this Member exist first by clicking the Search Member button","Check if the Member exist",2);

            }
            
            //need to check if this book is available
            else if(!issue.checkBookAvailability(_book_id))
            {
                JOptionPane.showMessageDialog(null, "This Book is not available right now","Book not available",2);

            }
            
            else if(rtnDate.before(issDate))
            {
                JOptionPane.showMessageDialog(null, "The Return Date must be after the Issue Date","Wrong Return Date",2);

            }
            else
            {
                issue.addIssue(_book_id, _member_id, "issued", _issue_date, _return_date, _note);
                //reset fields
                jSpinner_BookID.setValue(0);
                jSpinner_MemberID.setValue(0);
                jLabel_BookName.setText("Book Name");
                jLabel_MemberFullname.setText("Member Full Name");
                jLabel_available.setText("YES-or-No");
                jDateChooser_IssueDate.setDate(null);
                
               //Date date =  new Date();
                //System.out.println("New date is " +);
                jDateChooser_ReturnDate.setDate(null);
              
                book_Exist = false;
                member_Exist = false;
            }
      
        }
        catch (HeadlessException | NullPointerException | ParseException ex)
        {

            JOptionPane.showMessageDialog(null, "Select Issue Date & Return Date","Select Date",2);
        }
        
    }//GEN-LAST:event_jButton_IssueBookActionPerformed
    
    private void jButton_searchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchBookActionPerformed
     try {
         //to search book by id
         int book_id = (int)jSpinner_BookID.getValue();
         
         
         //to check if this book is available or not
         my_classes.Book selectedBook = book.getBookById(book_id);
         
         
         if(selectedBook != null)//if this book exist
         {
             //to display the book title/name
             jLabel_BookName.setText(selectedBook.getName());
             //set the book exist to true
             book_Exist = true;
             
             //display availability
             if(issue.checkBookAvailability(book_id))
             {
                 jLabel_available.setText("YES");
                 jLabel_available.setForeground(Color.green);
             }
         
         else //if this bookdoesn't exist
             {
                jLabel_available.setText("NO");
                jLabel_available.setForeground(Color.red);

             }
         }    
         else
         {
             //if this book doesn't exist
         JOptionPane.showMessageDialog(null,"This book doesn't exist", "Book Not Found",2);
         jLabel_BookName.setText("Book Name");
         book_Exist = false;
         jLabel_available.setText("YES-or-NO");
         jLabel_available.setForeground(Color.red);

         }
         
     } catch (SQLException ex) {
         Logger.getLogger(IssueBookForm.class.getName()).log(Level.SEVERE, null, ex);
         
         
     }
      
            
    }//GEN-LAST:event_jButton_searchBookActionPerformed

    private void jButton_searchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchMemberActionPerformed
        
         try {
         //to search member by id
         int member_id = (int)jSpinner_MemberID.getValue();
         
         
         //to check if this member is available or not
         my_classes.Member selectedMember = member.getMemberById(member_id);
         
         
         if(selectedMember != null)//if this member exist
         {
             //to display the member fullname
             jLabel_MemberFullname.setText(selectedMember.getFirstName() + " " + selectedMember.getLastName());
             //set the member exist to true
             member_Exist = true;
         }
         else
         {
             //if this member doesn't exist
         JOptionPane.showMessageDialog(null,"This member doesn't exist", "Member Not Found",2);
         jLabel_MemberFullname.setText("Member Full-Name");
         member_Exist = false;
         }
         
     } catch (SQLException ex) {
         Logger.getLogger(IssueBookForm.class.getName()).log(Level.SEVERE, null, ex);
         
         
     }
    }//GEN-LAST:event_jButton_searchMemberActionPerformed

    private void jLabel_BookNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseClicked
        // to display the book info card
         int book_id = (int)jSpinner_BookID.getValue();
         BookInfoCardForm bookCardF = new BookInfoCardForm(book_id);
         bookCardF.setVisible(true);
    }//GEN-LAST:event_jLabel_BookNameMouseClicked

    private void jLabel_MemberFullnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseClicked
        // to display the member info card
       
         int member_id = (int)jSpinner_MemberID.getValue();
         MemberInfoCardForm memberCardF = new MemberInfoCardForm(member_id);
         memberCardF.setVisible(true);
        
    }//GEN-LAST:event_jLabel_MemberFullnameMouseClicked

    private void jLabel_BookNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseEntered
        // add border in the bottom of the book name jlabel
       
        setBorderToJlable(jLabel_BookName, new Color(51,102,255));

    }//GEN-LAST:event_jLabel_BookNameMouseEntered

    private void jLabel_BookNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_BookNameMouseExited
         // add white border in the bottom of the book name jlabel
        
        setBorderToJlable(jLabel_BookName, Color.white);
    }//GEN-LAST:event_jLabel_BookNameMouseExited

    private void jLabel_MemberFullnameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseEntered
        // add border in the bottom of the member full name jlabel
       
        setBorderToJlable(jLabel_MemberFullname, new Color(51,102,255));

    }//GEN-LAST:event_jLabel_MemberFullnameMouseEntered

    private void jLabel_MemberFullnameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_MemberFullnameMouseExited
        // add white border in the bottom of the member full name jlabel
        
        setBorderToJlable(jLabel_MemberFullname, Color.white);
    }//GEN-LAST:event_jLabel_MemberFullnameMouseExited

    private void jLabel_availableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_availableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel_availableMouseClicked

    //to create a little function to set border
    public void setBorderToJlable(JLabel label, Color color)
    {
        Border border = BorderFactory.createMatteBorder(0, 0, 1, 0, color);
        label.setBorder(border);
    
    }
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_IssueBook;
    private javax.swing.JButton jButton_searchBook;
    private javax.swing.JButton jButton_searchMember;
    private com.toedter.calendar.JDateChooser jDateChooser_IssueDate;
    private com.toedter.calendar.JDateChooser jDateChooser_ReturnDate;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_BookName;
    private javax.swing.JLabel jLabel_CloseForm_;
    private javax.swing.JLabel jLabel_FormTitle;
    private javax.swing.JLabel jLabel_MemberFullname;
    private javax.swing.JLabel jLabel_available;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner_BookID;
    private javax.swing.JSpinner jSpinner_MemberID;
    private javax.swing.JTextArea jTextArea_Note;
    // End of variables declaration//GEN-END:variables

//    private static class func {
//
//        private static String selectImage() {
////            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//            
//                ImageIcon imgIco = new ImageIcon(getClass().getResource(imagePath)); //to get the image
//
//            Image image = imgIco.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH); //to make the image fit the jLabel
//
//            label.setIcon(new ImageIcon(image)); //to set the image into the jLabel
//        }
//
//        private static void displayImage(int i, int i0, Object object, String path, JLabel jLabel_Image) {
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        }
//
//        public func() {
//        }
//    }
}
